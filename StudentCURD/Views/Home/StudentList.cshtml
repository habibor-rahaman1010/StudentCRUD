@inject Infrastructure.Data.ApplicationDbContext _context
@using Microsoft.AspNetCore.Identity
@using Core.Entities
@inject SignInManager<ApplicationUser> SignInManager
@model Core.ViewModel.PagerViewModel<StudentTable>

@{
    ViewData["Title"] = "Student List";
}

<style>
    .my_button {
        display: flex;
        justify-content: space-evenly;
    }
</style>

<div class="text-center">
    <h2 class="display-5 mb-4">Welcome Students</h2>

    <table class="table">
        <thead>
            <tr>
                <th scope="col">Student No</th>
                <th scope="col">Id</th>
                <th scope="col">Name</th>
                <th scope="col">Class</th>
                <th scope="col">DOB</th>
                <th scope="col">Gender</th>
                <th scope="col">Action</th>
            </tr>
        </thead>

        <tbody class="table-group-divider">
            @if (Model.Students != null)
            {
                @foreach (var student in Model.Students)
                {
                    <tr>
                        @if (Model.Pager != null)
                        {  
                            <td>@(Model.Students.IndexOf(student) + Model.Pager.PageSize * (Model.Pager.CurrentPage - 1) + 1)</td>
                        }
                        <td>@student.Id</td>
                        <td>@student.Name</td>
                        @{
                            string className = "";
                            var classEntity = _context?.Classes?.FirstOrDefault(c => c.Id == student.ClassId);
                            if (classEntity != null)
                            {
                                className = classEntity.Name;
                            }
                        }
                        <td>@className</td>
                        <td>@student.DOB.ToString("MM-dd-yyyy")</td>
                        <td>@(student.Gender == 0 ? "Male" : "Female")</td>

                        <td class="my_button">
                            @if (SignInManager.IsSignedIn(User) && User.IsInRole("SUPERADMIN"))
                            {
                                <a class="btn btn-info" asp-controller="StudentInfo" asp-action="Edit" asp-route-id="@student.Id">Edit</a>
                            }
                            <a class="btn btn-secondary" asp-controller="StudentInfo" asp-action="Detail" asp-route-id="@student.Id">Details</a>
                            @if (SignInManager.IsSignedIn(User) && User.IsInRole("SUPERADMIN"))
                            {
                                <span>
                                    <form id="deleteForm" asp-controller="StudentInfo" asp-action="Delete" asp-route-id="@student.Id" method="post">
                                        <button type="submit" class="btn btn-danger">Delete</button>
                                    </form>
                                </span>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <partial name="_PagerPartial">

</div>
