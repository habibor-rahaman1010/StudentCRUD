@* @{
    ViewData["Title"] = "Add Student Info";
}
@inject Infrastructure.Data.ApplicationDbContext dbContext
@model Core.Entities.StudentTable

<div class="w-50">
    <h1>Edit Student Here</h1>

    @if (Model is null)
    {
        <p>No student was found with this Id. </p>
    }
    else
    {
        <form method="post">
            <div class="mt-3">
                <label for="studentID" class="form-label">Id </label>
                <input type="text" id="studentID" class="form-control" asp-for="Id" readonly />
            </div>

            <div class="mt-3">
                <label for="studentName" class="form-label">Name </label>
                <input type="text" id="studentName" class="form-control" asp-for="Name" />
            </div>

            <div class="mt-3">
                <label for="classId" class="form-label">Class </label>
                <select id="classId" class="form-select" asp-for="ClassId">
                    @{
                        List<SelectListItem>? classNames = dbContext?.Classes?.Select(c => new SelectListItem
                {
                    Value = c.Id.ToString(),
                    Text = c.Name
                }).ToList();

                        classNames?.Insert(0, new SelectListItem { Value = "", Text = "Select Class" });

                        if (classNames != null)
                        {
                            foreach (var className in classNames)
                            {
                                <option value="@className.Value">@className.Text</option>
                            }
                        }
                    }
                </select>
            </div>

            <div class="mt-3">
                <label class="form-label">Gender </label>
                <div>
                    <input type="radio" id="male" name="Gender" class="form-check-input" value="0"
                    @(Model?.Gender == 0 ? "checked" : "") />
                    <label for="male" class="form-check-label">Male</label>
                </div>
                <div>
                    <input type="radio" id="female" name="Gender" class="form-check-input" value="1"
                    @(Model?.Gender == 1 ? "checked" : "") />
                    <label for="female" class="form-check-label">Female</label>
                </div>
            </div>


            <div class="mt-3">
                <label for="dateOfBirth" class="form-label">Date Of Birth </label>
                <input type="date" id="dateOfBirth" class="form-control" asp-for="DOB" />
            </div>

            <div class="mt-5">
                <button type="submit" class="btn btn-success"> Update Student</button>
            </div>
        </form>
    }

</div>
 *@






@{
    ViewData["Title"] = "Edit Student Info";
}
@inject Infrastructure.Data.ApplicationDbContext dbContext
@model Core.Entities.StudentTable

<div class="w-50">
    <h1>Edit Student Here</h1>

    @if (Model is null)
    {
        <p>No student was found with this Id. </p>
    }
    else
    {
        <form method="post">
            <div class="mt-3">
                <label for="studentID" class="form-label">Id </label>
                <input type="text" id="studentID" class="form-control" asp-for="Id" readonly />
            </div>

            <div class="mt-3">
                <label for="studentName" class="form-label">Name </label>
                <input type="text" id="studentName" class="form-control" asp-for="Name" />
                <span asp-validation-for="Name" class="text-danger"></span> <!-- Display validation error message -->
            </div>

            <div class="mt-3">
                <label for="classId" class="form-label">Class </label>
                <select id="classId" class="form-select" asp-for="ClassId">
                    <option value="">Select Class</option>
                    @if (dbContext?.Classes != null)
                    {
                        foreach (var className in dbContext.Classes)
                        {
                            <option value="@className.Id">@className.Name</option>
                        }
                    }
                </select>
                <span asp-validation-for="ClassId" class="text-danger"></span> <!-- Display validation error message -->
            </div>

            <div class="mt-3">
                <label class="form-label">Gender </label>
                <div>
                    <input type="radio" id="male" name="Gender" class="form-check-input" value="0" @(Model?.Gender == 0 ? "checked" : "") />
                    <label for="male" class="form-check-label">Male</label>
                </div>
                <div>
                    <input type="radio" id="female" name="Gender" class="form-check-input" value="1" @(Model?.Gender == 1 ? "checked" : "") />
                    <label for="female" class="form-check-label">Female</label>
                </div>
                <span asp-validation-for="Gender" class="text-danger"></span> <!-- Display validation error message -->
            </div>

            <div class="mt-3">
                <label for="dateOfBirth" class="form-label">Date Of Birth </label>
                <input type="date" id="dateOfBirth" class="form-control" asp-for="DOB" />
                <span asp-validation-for="DOB" class="text-danger"></span> <!-- Display validation error message -->
            </div>

            <div class="mt-5">
                <button type="submit" class="btn btn-success">Update Student</button>
            </div>
        </form>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
